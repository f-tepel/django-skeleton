name: CI
on:
  push:
    branches:
      - master

jobs:
  test:
    name: Execute tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build docker images
        run: docker-compose build
      - name: Start docker-compose
        run: docker-compose up -d
      - name: Run tests
        run: docker-compose exec -T web coverage run --source='.' manage.py test --pattern="tests_*.py"
      - name: Generate coverage report
        run: |
          docker-compose exec -T web coverage json
          docker-compose exec -T web COV=$(cat coverage.json)
          docker-compose exec -T web PCT="$(echo "$COV" | python -c "import sys, json; print(json.load(sys.stdin)['totals']['percent_covered'])")"
          docker-compose exec -T web echo "$PCT" | python -c "import sys; import json; print('Test coverage is fine') if json.load(sys.stdin) > 99 else sys.exit(1)"
          docker-compose exec -T web coverage report

  deploy:
    needs: test
    name: deploy to vps
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to api staging
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.STAGING_HOST }}
        username: ${{ secrets.STAGING_USER }}
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          cd ~/vet-portal-api
          git pull
          docker-compose -f docker-compose.prod.yaml build
          docker-compose -f docker-compose.prod.yaml up -d
          docker-compose -f docker-compose.prod.yaml exec -T web python manage.py collectstatic --noinput
          docker-compose -f docker-compose.prod.yaml exec -T web python manage.py migrate
